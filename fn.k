fn main() {
   print_name(1,20,"daniel")
}

fn print_name(int x,y string x) {
    print(x,y)
    print("$name age:${x+y}")
}
fn name(int a) => int {
      return fn() => int {
                return a+1
             }
}
mould a {
i8 a,
i16 b,
i32 c,
i64 d,
string e
}
pub fn age(mould a) {

}

fn a() {
   return 1+2,nil
} => (int,error)

fn a() :(int,error) {
   return 1+2,nil
} 

fn a() => (int,error) {
   return 1+2,nil
} 

fn a()  (int,error) {
   return 1+2,nil
} 

fn a(int a ,string b ="123")  (int,error) {
   return 1+2,nil
} 

fn a(int a, ...string b) => (int,error) {
   return 1+2,nil
} 

fn a<T b> => T {
   return b
}

 m :=  ( 1>2)? : 
 
 fn() or {
   
 }
 fn b() i8 {
      if {
         return 1
      }else if {
         => 2
      }else{
        return error.New("1")
      }
   }
fn errorEx() {
  c:=b() or {
  print(err)
  }
  king :=b()?
  king.err
  king.name
     if a>0 {
   }
  k,err:=b()
  err = b()
}
 
 
 
 
 
 
 
 
 
