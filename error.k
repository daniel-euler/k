fn a() int {
  if i>0 {
    return error
  }
  1
}
fn aa() int {
  if i>0 {
    return error
  }
  1
}

v,err := a().result, a().err;
_,err := a();
bb,_  := a();
b0,err :=a();
if err ==EOF {
   os.Exit(1);
}
b1 := a()_;
if a()_ == EOF {  // x a() _ == 1
   os.Exit(1)
}
if b1 == EOF {
   os.Exit(1)
}
b2 := a()~;
if a()~ == 1 {
 
}
b3 := a()?;
b5 := b3 or {
  if err == EOF {}
}
b4 := a() or {
  if err == 1 {}
}
fn ee() {
if 1>2 {
throw("");
}else{
panic("");
}
}

try {
a();
aa();
}catch{

}final{
}

Ok()?
Err()?
